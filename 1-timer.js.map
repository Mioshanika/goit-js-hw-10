{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst refs = {\n  dateInput: document.querySelector('#datetime-picker'),\n  startButton: document.querySelector('[data-start]'),\n  stopButton: document.querySelector('[data-stop]'),\n  daysDisplay: document.querySelector('[data-days]'),\n  hoursDisplay: document.querySelector('[data-hours]'),\n  minutesDisplay: document.querySelector('[data-minutes]'),\n  secondsDisplay: document.querySelector('[data-seconds]'),\n};\nconst MAX_DATE = 99; // +99 days from current date\nfunction calcMaxDate() {\n  const dateNtime = new Date();\n  const futureDays = dateNtime.getDate() + MAX_DATE;\n  dateNtime.setDate(futureDays);\n  return dateNtime;\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst timeLeft = {\n  userDate: new Date(),\n  maxDate: calcMaxDate(),\n  intervalID: null,\n  start() {\n    if (this.userDate.valueOf() <= Date.now()) {\n      izitoast.error(msgTimePassed);\n      refs.startButton.disabled = true;\n      return;\n    }\n    this.intervalID = setInterval(() => {\n      this.tick();\n    }, 1000);\n    refs.dateInput.disabled = true;\n    refs.startButton.disabled = true;\n    refs.stopButton.disabled = false;\n  },\n  stop() {\n    if (this.intervalID) clearInterval(this.intervalID);\n    refs.stopButton.disabled = true;\n    refs.dateInput.disabled = false;\n    refs.daysDisplay.textContent = '00';\n    refs.hoursDisplay.textContent = '00';\n    refs.minutesDisplay.textContent = '00';\n    refs.secondsDisplay.textContent = '00';\n  },\n  tick() {\n    const diffMs = this.userDate.valueOf() - Date.now();\n    if (diffMs < 1000) {\n      this.stop();\n      return;\n    }\n    const diff = convertMs(diffMs);\n    refs.daysDisplay.textContent = diff.days.toString().padStart(2, '0');\n    refs.hoursDisplay.textContent = diff.hours.toString().padStart(2, '0');\n    refs.minutesDisplay.textContent = diff.minutes.toString().padStart(2, '0');\n    refs.secondsDisplay.textContent = diff.seconds.toString().padStart(2, '0');\n  },\n};\nconst msgFutureDate = {\n  message: 'Please choose a date in the future',\n  messageColor: 'white',\n  backgroundColor: 'red',\n  position: 'topCenter',\n};\nconst msgTimePassed = {\n  message:\n    'Selected date is in the past now. Please select new date in the future.',\n  messageColor: 'white',\n  backgroundColor: 'red',\n  position: 'topCenter',\n};\nconst flatpickrOptions = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: timeLeft.userDate,\n  maxDate: timeLeft.maxDate,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    timeLeft.userDate = selectedDates[0];\n    if (timeLeft.userDate.valueOf() <= Date.now()) {\n      izitoast.error(msgFutureDate);\n      refs.startButton.disabled = true;\n      return;\n    }\n    refs.startButton.disabled = false;\n  },\n};\n\n// Begin\nrefs.startButton.disabled = true;\nrefs.stopButton.disabled = true;\nconst fp = flatpickr(refs.dateInput, flatpickrOptions);\nrefs.startButton.addEventListener('click', () => {\n  timeLeft.start();\n});\nrefs.stopButton.addEventListener('click', () => {\n  timeLeft.stop();\n});\n"],"names":["refs","MAX_DATE","calcMaxDate","dateNtime","futureDays","convertMs","ms","days","hours","minutes","seconds","timeLeft","izitoast","msgTimePassed","diffMs","diff","msgFutureDate","flatpickrOptions","selectedDates","flatpickr"],"mappings":"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"}